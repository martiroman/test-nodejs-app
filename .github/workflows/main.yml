name: Build, Push Docker Image and Deploy

on:
  push:
    branches:
      - main

permissions:
  contents: write
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout del repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: src/package-lock.json

      # 3️⃣ Instalar dependencias
      - name: Install dependencies
        working-directory: ./src
        run: npm install

      # 4️⃣ Build proyecto
      - name: Build project
        working-directory: ./src
        run: npm run build --if-present

      # 5️⃣ Generar versión automática basada en commits
      - name: Generate build version
        id: version
        run: |
          COMMIT_COUNT=$(git rev-list --count HEAD)
          echo "BUILD_VERSION=1.0.$COMMIT_COUNT" >> $GITHUB_ENV
          echo "Build version: $BUILD_VERSION"

      # 6️⃣ Login en Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 7️⃣ Construir y push de la imagen
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mitienda:${{ env.BUILD_VERSION }}

     # Generar buildVersion (por ejemplo commit count)
      - name: Generate build version
        id: appversion
        run: |
          COMMIT_COUNT=$(git rev-list --count HEAD)
          BUILD_VERSION=1.0.$COMMIT_COUNT
          echo "BUILD_VERSION=$BUILD_VERSION" >> $GITHUB_ENV
          echo "Build version: $BUILD_VERSION"

      # Actualizar deploy.yaml localmente
      - name: Update deploy.yaml
        run: |
          DEPLOY_FILE=conf-k8s/deploy.yaml
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/mitienda:latest
          BUILD_VERSION=${{ env.BUILD_VERSION }}

          # Cambiar la imagen
          sed -i "s|image: .*|image: $IMAGE_NAME|g" $DEPLOY_FILE

          # Cambiar buildVersion label
          sed -i "s|buildVersion: .*|buildVersion: $BUILD_VERSION|g" $DEPLOY_FILE

        # (Opcional) Commit del deploy.yaml actualizado
      - name: Commit updated deploy.yaml
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add conf-k8s/deploy.yaml
          git commit -m "Update buildVersion to $BUILD_VERSION and Docker image" || echo "No changes to commit"
          git push origin HEAD:main
